"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("canvas");const e="undefined"!=typeof window,r=e?"undefined"==typeof HTMLCanvasElement?null:HTMLCanvasElement:require("canvas"),n=(()=>{if(!e&&"parseFont"in r)return t=>r.parseFont(t).size;const t=/([\d.]+)(px|pt|pc|in|cm|mm|%|em|ex|ch|rem|q)/i,n=new Map;return e=>{const r=n.get(e);if(r)return r;const s=t.exec(e);if(!s)return 0;let i=Number(s[1]);switch(s[2]){case"pt":i/=.75;break;case"pc":i*=16;break;case"in":i*=96;break;case"cm":i*=96/2.54;break;case"mm":i*=96/25.4;break;case"em":case"rem":i*=16/.75;break;case"q":i*=96/25.4/4}return n.set(e,i),i}})(),s=(t,e,r)=>{const n=[],s=[],i=t.measureText(" ").width;for(const a of e.split(/\r?\n/)){let e=r;for(const o of a.split(" ")){const a=t.measureText(o).width,h=a+i;h>e?(s.length&&(n.push(s.join(" ")),s.length=0),s.push(o),e=r-a):(e-=h,s.push(o))}s.length&&(n.push(s.join(" ")),s.length=0)}return n.join("\n")};const i=t=>{const e=t.getImageData(),{data:r}=e;for(let t=0;t<r.length;t+=4){const e=.2126*r[t]+.7152*r[t+1]+.0722*r[t+2];r[t]=e,r[t+1]=e,r[t+2]=e}return t.putImageData(e,0,0)},a=i,o=t=>{const e=t.getImageData(),{data:r}=e;for(let t=0;t<r.length;t+=4){const e=255-(.2126*r[t]+.7152*r[t+1]+.0722*r[t+2]);r[t]=e,r[t+1]=e,r[t+2]=e}return t.putImageData(e,0,0)},h=o,c=(t,e)=>{const r=t.getImageData(),{data:n}=r;for(let t=0;t<n.length;t+=4)n[t]-=e,n[t+1]-=e,n[t+2]-=e;return t.putImageData(r,0,0)},l=c,u=(t,e,r=!0)=>{const n=Math.round(Math.sqrt(e.length)),s=Math.floor(n/2),i=t.getImageData(),a=i.data,o=i.width,h=i.height,c=o,l=h,u=t.getImageData(),x=u.data,p=r?1:0;for(let t=0;t<l;t++)for(let r=0;r<c;r++){const i=t,l=r,u=4*(t*c+r);let g=0,d=0,f=0,m=0;for(let t=0;t<n;t++)for(let r=0;r<n;r++){const c=i+t-s,u=l+r-s;if(c>=0&&c<h&&u>=0&&u<o){const s=4*(c*o+u),i=e[t*n+r];g+=a[s]*i,d+=a[s+1]*i,f+=a[s+2]*i,m+=a[s+3]*i}}x[u]=g,x[u+1]=d,x[u+2]=f,x[u+3]=m+p*(255-m)}return t.putImageData(u,0,0)},x=[0,-1,0,-1,4,-1,0,-1,0],p=[0,-1,0,-1,5,-1,0,-1,0],g=[1/9,1/9,1/9,1/9,1/9,1/9,1/9,1/9,1/9];exports.Canvas=class{constructor(e,r,n){this.canvas="number"==typeof e?t.createCanvas(e,r,n):e,this.context=this.canvas.getContext("2d")}get windowCanvas(){return this.canvas}get width(){return this.canvas.width}set width(t){this.canvas.width=t}get height(){return this.canvas.height}set height(t){this.canvas.height=t}get textFontHeight(){return n(this.context.font)}changeCanvasSize(t,e){return this.changeCanvasWidth(t).changeCanvasHeight(e)}changeCanvasWidth(t){return this.width=t,this}changeCanvasHeight(t){return this.height=t,this}save(){return this.context.save(),this}restore(){return this.context.restore(),this}rotate(t){return this.context.rotate(t),this}scale(t,e){return this.context.scale(t,e),this}translate(t,e){return this.context.translate(t,e),this}clip(t){return this.context.clip(t),this}setTransform(...t){return this.context.setTransform(...t),this}resetTransformation(){return this.setTransform(1,0,0,1,0,0)}getImageData(t,e,r,n,s){if("function"==typeof t&&(s=t,t=0),s){if("function"!=typeof s)throw new TypeError("Callback must be a function");return s.call(this,this.context.getImageData(null!=t?t:0,null!=e?e:0,null!=r?r:this.width,null!=n?n:this.height),this),this}return this.context.getImageData(null!=t?t:0,null!=e?e:0,null!=r?r:this.width,null!=n?n:this.height)}putImageData(...t){return this.context.putImageData(...t),this}fill(t){return this.context.fill(t),this}printText(t,e,r,...n){return this.context.fillText(t,e,r,...n),this}printResponsiveText(t,e,r,n){var s;const[,i="",a,o]=null!==(s=/(\w+ )?(\d+)(.+)/.exec(this.context.font))&&void 0!==s?s:[],h=parseInt(a,10),{width:c}=this.measureText(t),l=n>c?h:n/c*h;return this.setTextFont(`${i}${l}${o}`).printText(t,e,r)}printMultilineText(t,e,r){const n=t.split(/\r?\n/);if(n.length<=1)return this.printText(t,e,r);const s=this.textFontHeight;let i=r;for(const t of n)this.printText(t,e,Math.floor(i)),i+=s;return this}printWrappedText(t,e,r,n){const i=s(this,t,n);return this.printMultilineText(i,e,r)}stroke(){return this.context.stroke(),this}printStrokeRect(t,e,r,n){return this.context.strokeRect(t,e,r,n),this}printStrokeText(t,e,r,n){return this.context.strokeText(t,e,r,n),this}measureText(t,e){if(e){if("function"!=typeof e)throw new TypeError("Callback must be a function.");return e.call(this,this.context.measureText(t),this),this}return this.context.measureText(t)}setTextSize(t){var e;const[,r="",n]=null!==(e=/(\w+ )?(?:\d+)(.+)/.exec(this.context.font))&&void 0!==e?e:[];return this.setTextFont(`${r}${t}${n}`)}setStroke(t){return this.context.strokeStyle=t,this}setLineWidth(t){return this.context.lineWidth=t,this}setStrokeWidth(t){return this.setLineWidth(t)}setLineDashOffset(t){return this.context.lineDashOffset=t,this}setLineJoin(t){return this.context.lineJoin=t,this}setLineCap(t){return this.context.lineCap=t,this}setLineDash(t){return this.context.setLineDash(t),this}printImage(t,...e){return this.context.drawImage(t,...e),this}printCircularImage(t,e,r,n){return this.save().createCircularClip(e,r,n,0,2*Math.PI,!1).printImage(t,e-n,r-n,2*n,2*n).restore()}printRoundedImage(t,e,r,n,s,i){return this.save().createBeveledClip(e,r,n,s,i).printImage(t,e,r,n,s).restore()}printCircle(t,e,r){return this.save().createCircularPath(t,e,r).fill().restore()}printRectangle(t,e,r,n){return this.context.fillRect(t,e,r,n),this}printRoundedRectangle(t,e,r,n,s){return this.save().createBeveledPath(t,e,r,n,s).fill().restore()}createCircularPath(t,e,r,n=0,s=2*Math.PI,i=!1){return this.context.beginPath(),this.context.arc(t,e,r,n,s,i),this}createCircularClip(t,e,r,n,s,i){return this.createCircularPath(t,e,r,n,s,i).clip()}createRectanglePath(t,e,r,n){return this.context.rect(t,e,r,n),this}createRectangleClip(t,e,r,n){return this.createRectanglePath(t,e,r,n).clip()}createBeveledPath(t,e,r,n,s){if(r>0&&n>0){let i=void 0;"number"==typeof s?i={tl:s=Math.min(s,r/2,n/2),tr:s,br:s,bl:s}:(i=s,s=Math.min(5,r/2,n/2));const{tl:a=s,tr:o=s,br:h=s,bl:c=s}=i;this.context.beginPath(),this.context.moveTo(t+a,e),this.context.lineTo(t+r-o,e),this.context.quadraticCurveTo(t+r,e,t+r,e+o),this.context.lineTo(t+r,e+n-h),this.context.quadraticCurveTo(t+r,e+n,t+r-h,e+n),this.context.lineTo(t+c,e+n),this.context.quadraticCurveTo(t,e+n,t,e+n-c),this.context.lineTo(t,e+a),this.context.quadraticCurveTo(t,e,t+a,e),this.context.closePath()}return this}createBeveledClip(t,e,r,n,s){return this.createBeveledPath(t,e,r,n,s).clip()}setColor(t){return this.context.fillStyle=t,this}setTextFont(t){return this.context.font=t,this}setTextAlign(t){return this.context.textAlign=t,this}setTextBaseline(t){return this.context.textBaseline=t,this}beginPath(){return this.context.beginPath(),this}closePath(){return this.context.closePath(),this}createPattern(t,e,r){const n=this.context.createPattern(t,e);return r?(r.call(this,n,this),this):n}printPattern(t,e){return this.createPattern(t,e,t=>this.setColor(t))}createLinearGradient(t,e,r,n,s=[]){const i=this.context.createLinearGradient(t,e,r,n);for(const t of s)i.addColorStop(t.position,t.color);return i}printLinearColorGradient(t,e,r,n,s){const i=this.createLinearGradient(t,e,r,n,s);return this.setColor(i)}printLinearStrokeGradient(t,e,r,n,s){const i=this.createLinearGradient(t,e,r,n,s);return this.setStroke(i)}createRadialGradient(t,e,r,n,s,i,a=[]){const o=this.context.createRadialGradient(t,e,r,n,s,i);for(const t of a)o.addColorStop(t.position,t.color);return o}printRadialColorGradient(t,e,r,n,s,i,a){const o=this.createRadialGradient(t,e,r,n,s,i,a);return this.setColor(o)}printRadialStrokeGradient(t,e,r,n,s,i,a){const o=this.createRadialGradient(t,e,r,n,s,i,a);return this.setStroke(o)}createEllipsePath(t,e,r,n,s,i,a,o){return this.context.ellipse(t,e,r,n,s,i,a,o),this}createEllipseClip(t,e,r,n,s,i,a,o){return this.createEllipsePath(t,e,r,n,s,i,a,o).clip()}arc(t,e,r,n,s,i){return this.context.arc(t,e,r,n,s,i),this}arcTo(t,e,r,n,s){return this.context.arcTo(t,e,r,n,s),this}quadraticCurveTo(t,e,r,n){return this.context.quadraticCurveTo(t,e,r,n),this}bezierCurveTo(t,e,r,n,s,i){return this.context.bezierCurveTo(t,e,r,n,s,i),this}lineTo(t,e){return this.context.lineTo(t,e),this}moveTo(t,e){return this.context.moveTo(t,e),this}setShadowBlur(t){return this.context.shadowBlur=t,this}setShadowColor(t){return this.context.shadowColor=t,this}setShadowOffsetX(t){return this.context.shadowOffsetX=t,this}setShadowOffsetY(t){return this.context.shadowOffsetY=t,this}setMiterLimit(t){return this.context.miterLimit=t,this}setPatternQuality(t){return this.context.patternQuality=t,this}setTextDrawingMode(t){return this.context.textDrawingMode=t,this}setAntialiasing(t){return this.context.antialias=t,this}setGlobalCompositeOperation(t){return this.context.globalCompositeOperation=t,this}setGlobalAlpha(t){return this.context.globalAlpha=t,this}resetShadows(){return this.setShadowBlur(0).setShadowOffsetX(0).setShadowOffsetY(0).setShadowColor("transparent")}clearCircle(t,e,r,n=0,s=2*Math.PI,i=!1){return this.createCircularClip(t,e,r,n,s,i).clearRectangle(t-r,e-r,2*r,2*r)}clearRectangle(t=0,e=0,r=this.width,n=this.height){return this.context.clearRect(t,e,r,n),this}getLineDash(){return this.context.getLineDash()}get lineDash(){return this.getLineDash()}isPointInPath(t,e,r){return this.context.isPointInPath(t,e,r)}isPointInStroke(t,e){return this.context.isPointInStroke(t,e)}process(t,...e){return t.call(this,this,...e),this}toBuffer(...t){return this.canvas.toBuffer(...t)}toBufferAsync(...t){return new Promise((e,r)=>this.canvas.toBuffer((t,n)=>{t?r(t):e(n)},...t))}toDataURL(...t){return this.canvas.toDataURL(...t)}toDataURLAsync(...t){return new Promise((e,r)=>this.canvas.toDataURL(...t,(t,n)=>{t?r(t):e(n)}))}toBlob(t,e,r){return this.windowCanvas.toBlob(t,e,r)}toBlobAsync(t,e){return new Promise(r=>this.windowCanvas.toBlob(r,t,e))}wrapText(t,e,r){const n=s(this,t,e);if(r){if("function"!=typeof r)throw new TypeError("Callback must be a function");return r.call(this,n,this),this}return n}},exports.blur=(t,e=1)=>{for(let r=0;r<e;++r)u(t,g,!0);return t},exports.brightness=(t,e)=>{const r=t.getImageData(),{data:n}=r;for(let t=0;t<n.length;t+=4)n[t]+=e,n[t+1]+=e,n[t+2]+=e;return t.putImageData(r,0,0)},exports.color=t=>t,exports.convolute=u,exports.darkness=c,exports.edge=t=>u(t,x,!0),exports.grayscale=a,exports.greyscale=i,exports.hex=t=>"#"+t,exports.hsl=(t,e,r)=>`hsl(${t}, ${e}%, ${r}%)`,exports.hsla=(t,e,r,n)=>`hsla(${t}, ${e}%, ${r}%, ${n})`,exports.invert=t=>t.save().setGlobalCompositeOperation("difference").setColor("white").printRectangle(0,0,t.width,t.height).restore(),exports.invertGrayscale=o,exports.invertGreyscale=h,exports.invertedThreshold=(t,e)=>{const r=t.getImageData(),{data:n}=r;for(let t=0;t<n.length;t+=4){const r=.2126*n[t]+.7152*n[t+1]+.0722*n[t+2]>=e?0:255;n[t]=r,n[t+1]=r,n[t+2]=r}return t.putImageData(r,0,0)},exports.myOldFriend=l,exports.resolveImage=(r,n)=>e?new Promise((t,e)=>{const s=Object.assign(document.createElement("img"),n);function i(){s.onload=null,s.onerror=null}s.onload=()=>{i(),t(s)},s.onerror=()=>{i(),e(new Error(`Failed to load the image "${r}"`))},s.src=r}):t.loadImage(r,n),exports.rgb=(t,e,r)=>`rgb(${t}, ${e}, ${r})`,exports.rgba=(t,e,r,n)=>`rgba(${t}, ${e}, ${r}, ${n})`,exports.sepia=t=>{const e=t.getImageData(),{data:r}=e;for(let t=0;t<r.length;t+=4){const e=r[t],n=r[t+1],s=r[t+2];r[t]=.393*e+.769*n+.189*s,r[t+1]=.349*e+.686*n+.168*s,r[t+2]=.272*e+.534*n+.131*s}return t.putImageData(e,0,0)},exports.sharpen=(t,e=1)=>{for(let r=0;r<e;++r)u(t,p,!0);return t},exports.silhouette=t=>{const e=t.getImageData(),{data:r}=e;for(let t=0;t<r.length;t+=4)r[t]=0,r[t+1]=0,r[t+2]=0;return t.putImageData(e,0,0)},exports.threshold=(t,e)=>{const r=t.getImageData(),{data:n}=r;for(let t=0;t<n.length;t+=4){const r=.2126*n[t]+.7152*n[t+1]+.0722*n[t+2]>=e?255:0;n[t]=r,n[t+1]=r,n[t+2]=r}return t.putImageData(r,0,0)};
//# sourceMappingURL=index.js.map
